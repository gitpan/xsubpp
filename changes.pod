
=head1 MODIFICATION HISTORY FOR XSUBPP

=head2 1.0

I<xsubpp> as released with Perl 5.000

=head2 1.1

I<xsubpp> as released with Perl 5.001

=head2 1.2 

Changes by Paul Marquess <pmarquess@bfsec.bt.co.uk>, 22 May 1995.

=over 5

=item 1.

Added I<xsubpp> version number for the first time. As previous releases
of I<xsubpp> did not have a formal version number, a numbering scheme
has been applied retrospectively.

=item 2.

If OUTPUT: is being used to specify output parameters and RETVAL is
also to be returned, it is now no longer necessary for the user to
ensure that RETVAL is specified last.

=item 3.

The I<xsubpp> version number, the .xs filename and a time stamp are
written to the generated .c file as a comment.

=item 4.

When I<xsubpp> is parsing the definition of both the input parameters
and the OUTPUT parameters, any duplicate definitions will be noted and
ignored.

=item 5.

I<xsubpp> is slightly more forgiving with extra whitespace.

=back

=head2 1.3 

Changes by Paul Marquess <pmarquess@bfsec.bt.co.uk>, 23 May 1995.

=over 5

=item 1.

More whitespace restrictions have been relaxed. In particular some
cases where a tab character was used to delimit fields has been
removed. In these cases any whitespace will now suffice.

The specific places where changes have been made are in the TYPEMAP
section of a typemap file and the input and OUTPUT: parameter
declarations sections in a .xs file.

=item 2.

More error checking added.

Before processing each typemap file I<xsubpp> now checks that it is a
text file. If not an warning will be displayed. In addition, a warning
will be displayed if it is not possible to open the typemap file.

In the TYPEMAP section of a typemap file, an error will be raised if
the line does not have 2 columns.

When parsing input parameter declarations check that there is at least
a type and name pair.

=back

=head2 1.4 

When parsing the OUTPUT arguments check that they are all present in
the corresponding input argument definitions.

=head2 1.5 

Changes by Paul Marquess <pmarquess@bfsec.bt.co.uk>, 1 June 1995.

Started tidy up to allow clean run using C<-w> flag. 

Added some more error checking.

The CASE: functionality now works.

=head2 1.6 

Changes by Paul Marquess <pmarquess@bfsec.bt.co.uk>, 3 June 1995.

Added some more error checking.

=head2 1.7 

Changes by Paul Marquess <pmarquess@bfsec.bt.co.uk>, 5 June 1995.

When an error or warning message is printed C<xsubpp> will now attempt
to identify the exact line in the C<.xs> file where the fault occurs.
This can be achieved in the majority of cases.

=head2 1.8 

Changes by Hallvard B Furuseth <h.b.furuseth@usit.uio.no>, 6 June 1995.

Accept backslash-newline as in C.  Allow preprocessor directives
anywhere.  Ignore whitespace in front of comments and on blank lines.

=head2 1.9 

Changes by Paul Marquess <pmarquess@bfsec.bt.co.uk>, 21 June 1995.

=over 5

=item 1.

Changed duplicate function error to a warning.

=item 2.

Changed the comment placed at the top of the C<.c> file to be more like
the comment used by MakeMaker.

=item 3.

When parsing the type for an XSUB parameter I<xsubpp> can now accept
definitions like this:

    char *fred

i.e. the '*' is recognised as part of the type, rather than the first
character of the variable.

=item 4.

Fixed a problem with command line parsing - I<xsubpp> was not properly
detecting the case where there was no filename present on the command
line.

=back

=head2 1.91

Changes by Hallvard B Furuseth <h.b.furuseth@usit.uio.no>, 5 July 1995.

New keywords INPUT:, PREINIT:, INIT:.  File '-' == STDIN.  Allowed code after
keywords (BOOT:, INIT: ...), so no part of the .xs file is ignored anymore.
No longer needs space in front of input variables.
Cleaned up and rearranged the code.  Some bugfixes and minor changes.

INIT: is just like CODE:, except it has no side effects - while CODE:
prevents RETVAL computation.

PREINIT: is the same, but is used before - or interleaved with - the
input variables.  INPUT: starts input variables that follow PREINIT:.

=head2 1.92

Changes by Hallvard B Furuseth <h.b.furuseth@usit.uio.no> and Paul
Marquess <pmarquess@bfsec.bt.co.uk>, 14 August 1995.

=over 5

=item 1.

Previously whenever a duplicate function was detected multiple newXS
calls were generated for it in the boot function. This is no longer the
case.

=item 2.

Addition of ALIAS: keyword. Format is

    ALIAS: alias = value alias = value
	   alias = value

=item 3.

reject `INPUT: &var' without type. This was taken as type `&'.
Accept whitespace after `&'.

=item 4.

Catch duplicate RETVAL output args.

=item 5.
 
Catch initialization `var==3', `var=' would become the varname.

=item 6.
 
Don't make `usage' error in functions with only optional args, it would
never be used.

=item 7.
 
Catch this bug:

        void
        pp_foo(x)
                # missing CASE:
                INPUT: ...
 
                CASE: ...

=back

=head2 1.921

Changes by Paul Marquess <pmarquess@bfsec.bt.co.uk>, 17 September 1995.

=over 5

=item 1.

Added B<-v> command line flag. Prints I<xsubpp> version number and
exits.

=item 2.

Removed the debugging line below that was accidentally added in version
1.92.

    warn "output_init: ($type, $num, $init) arg = $arg \n" ;

=item 3.

Fixed a problem that was introduced when ALIAS was added to I<xsubpp>.
The calls to C<newXS> in the boot function now need to be enclosed in a
block when an ALIAS has been defined. This is to allow a local copy of
C<cv> to be declared in the block for use with C<XSANY>.

=back

=head2 1.922
 
Changes by Paul Marquess <pmarquess@bfsec.bt.co.uk>, 20 September 1995.
 
=over 5
 
=item 1.

Added REQUIRE: keyword. The format is

    REQUIRE: n.nn

This works like I<require n.nn> in Perl itself. It checks that the
version number current copy of I<xsubpp> is greater than or equal to
I<n.nn>. If it is not I<xsubpp> terminates immediately with an error
message.

=item 2.

Moved the MODIFICATION HISTORY into a separate file. It was swamping
both I<xsubpp> and the other documentation.

=back

